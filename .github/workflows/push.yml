name: Build and Test

on: [push]

jobs:
  build-frontend:
    runs-on: ubuntu-latest
    env:
      target: x86_64-unknown-linux-musl
    steps:
      # 1. Frontend: Prepare environment
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1

      - name: Install wasm-pack
        run: cargo install wasm-pack

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 24

      # 1. Frontend: Build wg-quickrs-wasm
      - name: Build wg-quickrs-wasm
        run: |
          cd src/wg-quickrs-wasm
          wasm-pack build --target web --out-dir ../wg-quickrs-web/pkg -- --features wasm --color=always

      # 1. Frontend: Build wg-quickrs-web
      - name: Build web frontend
        run: |
          cd src/wg-quickrs-web
          npm ci --omit=dev
          npm run build

      # 2. Binary: Prepare environment
      - name: Setup Zig
        uses: mlugg/setup-zig@v2
        with:
          version: 0.15.1

      # 2. Binary: Build wg-quickrs
      - name: Build binary
        run: |
          cd src
          sudo apt-get update && sudo apt-get install -y musl-dev cmake clang llvm-dev libclang-dev pkg-config
          cargo install cargo-zigbuild
          rustup target add ${{ env.target }}
          cargo clean
          cargo zigbuild --release --package wg-quickrs --bin wg-quickrs --target=${{ env.target }}

      # 3. Testing: Prepare environment
      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.13'

      - name: Install Python dependencies
        run: |
          pip install -r tests/pytest/requirements.txt

      # 3. Testing: Test wg-quickrs
      - name: Run tests
        run: |
          cd tests/pytest
          mkdir -p src/target/release/
          cp src/target/${{ env.target }}/release/wg-quickrs src/target/release/wg-quickrs
          python -m pytest